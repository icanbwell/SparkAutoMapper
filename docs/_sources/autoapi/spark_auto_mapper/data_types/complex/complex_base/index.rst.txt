:mod:`spark_auto_mapper.data_types.complex.complex_base`
========================================================

.. py:module:: spark_auto_mapper.data_types.complex.complex_base


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper.data_types.complex.complex_base.AutoMapperDataTypeComplexBase



.. class:: AutoMapperDataTypeComplexBase(**kwargs: Any)


   Bases: :class:`spark_auto_mapper.data_types.data_type_base.AutoMapperDataTypeBase`

   base class for complex types
   :param kwargs:

   .. method:: include_null_properties(self, include_null_properties: bool) -> None


   .. method:: get_column_spec(self, source_df: Optional[pyspark.sql.DataFrame], current_column: Optional[pyspark.sql.Column]) -> pyspark.sql.Column

      Gets the column spec for this automapper data type

      :param source_df: source data frame in case the automapper type needs that data to decide what to do
      :param current_column: (Optional) this is set when we are inside an array


   .. method:: get_child_mappers(self) -> Dict[(str, spark_auto_mapper.data_types.data_type_base.AutoMapperDataTypeBase)]


   .. method:: get_schema(self, include_extension: bool) -> Optional[Union[(pyspark.sql.types.StructType, pyspark.sql.types.DataType)]]



