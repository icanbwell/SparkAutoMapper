:mod:`spark_auto_mapper.data_types.concat`
==========================================

.. py:module:: spark_auto_mapper.data_types.concat


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   spark_auto_mapper.data_types.concat.AutoMapperConcatDataType



.. class:: AutoMapperConcatDataType(*args: Union[(spark_auto_mapper.type_definitions.native_types.AutoMapperNativeTextType, spark_auto_mapper.type_definitions.wrapper_types.AutoMapperWrapperType, spark_auto_mapper.data_types.text_like_base.AutoMapperTextLikeBase, spark_auto_mapper.data_types.data_type_base.AutoMapperDataTypeBase)])


   Bases: :class:`spark_auto_mapper.data_types.text_like_base.AutoMapperTextLikeBase`

   Concatenates multiple strings or arrays together

   .. method:: include_null_properties(self, include_null_properties: bool) -> None


   .. method:: get_column_spec(self, source_df: Optional[pyspark.sql.DataFrame], current_column: Optional[pyspark.sql.Column]) -> pyspark.sql.Column

      Gets the column spec for this automapper data type

      :param source_df: source data frame in case the automapper type needs that data to decide what to do
      :param current_column: (Optional) this is set when we are inside an array



